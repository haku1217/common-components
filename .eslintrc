{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
    },
    "env": {
        "browser": true,
        "jest/globals": true
    },
    "plugins": [
        "@typescript-eslint",
        "react-hooks",
        "jest",
        "prettier",
        "import"
    ],
    "extends": [
        "airbnb",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended",
        "prettier/@typescript-eslint"
    ],
    "settings": {
        "import/resolver": {
            "node": {
                "extentions": [
                    ".ts",
                    ".tsx"
                ]
            }
        }
    },
    "rules": {
        "no-use-before-define": "off",
        "no-console": "off",
        "no-alert": "off",
        "import/no-unresolved": [
            2,
            {
                "ignore": [
                    "^src"
                ]
            }
        ],
        "import/extensions": [
            0
        ],
        /**
       * @description rules of eslint official
       */
        /**
       * @bug https://github.com/benmosher/eslint-plugin-import/issues/1282
       * "import/named" temporary disable.
       */
        "import/named": "off",
        "jsx-a11y/anchor-is-valid": "off",
        "react/jsx-no-target-blank": "off",
        /**
       * @bug?
       * "import/export" temporary disable.
       */
        "import/export": "off",
        "import/prefer-default-export": "off", // Allow single Named-export
        "no-unused-expressions": [
            "warn",
            {
                "allowShortCircuit": true,
                "allowTernary": true
            }
        ], // https://eslint.org/docs/rules/no-unused-expressions
        /**
       * @description rules of @typescript-eslint
       */
        "@typescript-eslint/prefer-interface": "off", // also want to use "type"
        "@typescript-eslint/explicit-function-return-type": "off", // annoying to force return type
        "@typescript-eslint/interface-name-prefix": "off",
        /**
       * @description rules of eslint-plugin-react
       */
        "react/jsx-props-no-spreading": "off",
        "react/jsx-filename-extension": [
            "warn",
            {
                "extensions": [
                    ".jsx",
                    ".tsx"
                ]
            }
        ], // also want to use with ".tsx"
        "react/prop-types": "off", // Is this incompatible with TS props type?
        "react/no-array-index-key": "off",
        "react/jsx-curly-brace-presence": "off",
        "react/jsx-one-expression-per-line": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/label-has-associated-control": [
            2,
            {
                "labelComponents": [
                    "label"
                ],
                "labelAttributes": [
                    "htmlFor"
                ],
                "controlComponents": [
                    "input"
                ]
            }
        ],
        "jsx-a11y/label-has-for": "off",
        /**
       * @description rules of eslint-plugin-react-hooks
       */
        "react-hooks/rules-of-hooks": "error",
        /**
       * @description rules of eslint-plugin-prettier
       */
        "prettier/prettier": [
            "error",
            {
                "printWidth": 120,
                "jsxBracketSameLine": false,
                "tabWidth": 2,
                "trailingComma": "none",
                "semi": false,
                "singleQuote": true
            }
        ]
    }
}